name: Build and Publish to PyPI

on:
  push:
    tags: ["v*"]     # publish on tags (recommended)
  workflow_dispatch:

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    # environment: pypi   # uncomment if you store the secret in a GitHub Environment named "pypi"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Upgrade pip & install tooling
        run: |
          python -m pip install --upgrade pip
          pip install build twine readme_renderer[md]

      - name: Clean old artifacts
        run: rm -rf dist build *.egg-info

      - name: Build package (sdist + wheel)
        run: python -m build

      - name: Validate package metadata
        run: twine check dist/*

      - name: Publish to PyPI (verbose)
        if: github.event_name != 'pull_request'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}   # <-- PyPI token
        run: |
          python -m pip install --upgrade twine
          twine upload -r pypi --skip-existing dist/* --verbose

      - name: Upload build artifacts (for debugging)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/*
